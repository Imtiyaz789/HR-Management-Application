[{"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\index.js":"1","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\reportWebVitals.js":"2","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\setAuthToken.js":"3","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\App.js":"4","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\store.js":"5","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\actions\\authActions.js":"6","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\auth\\Signup.js":"7","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Navbar.js":"8","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\auth\\Login.js":"9","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\index.js":"10","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\erroorreducer.js":"11","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\authreducer.js":"12","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\loadingreducer.js":"13","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Routes.js":"14","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\validations\\is-empty.js":"15","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\NewEmp.js":"16","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\EmployeeForm\\EmployeeForm.js":"17","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\useForm.js":"18","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Controls.js":"19","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Input.js":"20","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\RadioGroup.js":"21","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Checkbox.js":"22","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Select.js":"23","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\DatePicker.js":"24","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Button.js":"25","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\actions\\employeeAction.js":"26","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\AllEmployees.js":"27","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\employeereducer.js":"28","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\table\\EmployeeTable.js":"29","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\utils\\utils.js":"30","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\EmpDetails.js":"31","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Appbar.js":"32","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\EmployeeForm\\LeaveForm.js":"33","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\LeaveAppln.js":"34","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\MyLeaveAppln.js":"35","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\AllLeaveApplns.js":"36","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\SnackBar.js":"37","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\actions\\uiAction.js":"38","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\uireducer.js":"39","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\ShareEmpCredentials.js":"40","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\FaQ.js":"41","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Policies.js":"42","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Holidays.js":"43","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Accordion.js":"44","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\themereducer.js":"45","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Modules\\Markdown.js":"46","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Payroll.js":"47","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Paper.js":"48","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Finance.js":"49","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\table\\FinanceTable.js":"50","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\MySlips.js":"51","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\HolidayaData.js":"52","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\faqData.js":"53","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\Loading.js":"54","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Profile.js":"55"},{"size":949,"mtime":1610947804750,"results":"56","hashOfConfig":"57"},{"size":362,"mtime":1610705318030,"results":"58","hashOfConfig":"57"},{"size":277,"mtime":1610707067389,"results":"59","hashOfConfig":"57"},{"size":1930,"mtime":1611474011454,"results":"60","hashOfConfig":"57"},{"size":397,"mtime":1610705883779,"results":"61","hashOfConfig":"57"},{"size":2856,"mtime":1611466135987,"results":"62","hashOfConfig":"57"},{"size":8488,"mtime":1611475729539,"results":"63","hashOfConfig":"57"},{"size":8193,"mtime":1622351052376,"results":"64","hashOfConfig":"57"},{"size":6042,"mtime":1611584066539,"results":"65","hashOfConfig":"57"},{"size":704,"mtime":1611119242902,"results":"66","hashOfConfig":"57"},{"size":469,"mtime":1611463389250,"results":"67","hashOfConfig":"57"},{"size":695,"mtime":1610705883690,"results":"68","hashOfConfig":"57"},{"size":353,"mtime":1610705883722,"results":"69","hashOfConfig":"57"},{"size":3502,"mtime":1622362255001,"results":"70","hashOfConfig":"57"},{"size":282,"mtime":1610705965130,"results":"71","hashOfConfig":"57"},{"size":867,"mtime":1611421356206,"results":"72","hashOfConfig":"57"},{"size":7072,"mtime":1611392110128,"results":"73","hashOfConfig":"57"},{"size":1214,"mtime":1610909410794,"results":"74","hashOfConfig":"57"},{"size":349,"mtime":1610857731230,"results":"75","hashOfConfig":"57"},{"size":492,"mtime":1611228655459,"results":"76","hashOfConfig":"57"},{"size":887,"mtime":1611124573875,"results":"77","hashOfConfig":"57"},{"size":753,"mtime":1610857731227,"results":"78","hashOfConfig":"57"},{"size":935,"mtime":1610978011518,"results":"79","hashOfConfig":"57"},{"size":814,"mtime":1611473815321,"results":"80","hashOfConfig":"57"},{"size":739,"mtime":1611120878179,"results":"81","hashOfConfig":"57"},{"size":7901,"mtime":1611478241771,"results":"82","hashOfConfig":"57"},{"size":4030,"mtime":1611421757727,"results":"83","hashOfConfig":"57"},{"size":2996,"mtime":1611227207219,"results":"84","hashOfConfig":"57"},{"size":5081,"mtime":1611473845360,"results":"85","hashOfConfig":"57"},{"size":268,"mtime":1610878506341,"results":"86","hashOfConfig":"57"},{"size":6230,"mtime":1622352554874,"results":"87","hashOfConfig":"57"},{"size":5559,"mtime":1622352904323,"results":"88","hashOfConfig":"57"},{"size":4183,"mtime":1611474109850,"results":"89","hashOfConfig":"57"},{"size":913,"mtime":1611422653094,"results":"90","hashOfConfig":"57"},{"size":5433,"mtime":1611422815243,"results":"91","hashOfConfig":"57"},{"size":7165,"mtime":1611421904947,"results":"92","hashOfConfig":"57"},{"size":1565,"mtime":1611126966093,"results":"93","hashOfConfig":"57"},{"size":378,"mtime":1610950041959,"results":"94","hashOfConfig":"57"},{"size":827,"mtime":1610950013002,"results":"95","hashOfConfig":"57"},{"size":3505,"mtime":1611473944711,"results":"96","hashOfConfig":"57"},{"size":2952,"mtime":1611473986014,"results":"97","hashOfConfig":"57"},{"size":192,"mtime":1611142059264,"results":"98","hashOfConfig":"57"},{"size":2257,"mtime":1611410888846,"results":"99","hashOfConfig":"57"},{"size":1886,"mtime":1611473796366,"results":"100","hashOfConfig":"57"},{"size":363,"mtime":1611119409133,"results":"101","hashOfConfig":"57"},{"size":19234,"mtime":1611141927010,"results":"102","hashOfConfig":"57"},{"size":11528,"mtime":1622352604096,"results":"103","hashOfConfig":"57"},{"size":499,"mtime":1611195475146,"results":"104","hashOfConfig":"57"},{"size":8700,"mtime":1611478417449,"results":"105","hashOfConfig":"57"},{"size":4345,"mtime":1622272140858,"results":"106","hashOfConfig":"57"},{"size":5290,"mtime":1622272469928,"results":"107","hashOfConfig":"57"},{"size":4233,"mtime":1611410324588,"results":"108","hashOfConfig":"57"},{"size":4112,"mtime":1611411914616,"results":"109","hashOfConfig":"57"},{"size":597,"mtime":1611421090214,"results":"110","hashOfConfig":"57"},{"size":532,"mtime":1622362718197,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1dhol7g",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\index.js",[],["229","230"],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\reportWebVitals.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\setAuthToken.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\App.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\store.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\actions\\authActions.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\auth\\Signup.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Navbar.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\auth\\Login.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\index.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\erroorreducer.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\authreducer.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\loadingreducer.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Routes.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\validations\\is-empty.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\NewEmp.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\EmployeeForm\\EmployeeForm.js",["231"],"import React from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../controls/Controls\";\r\nimport { useForm, Form } from '../useForm';\r\nimport { connect } from 'react-redux'\r\nimport { add_new_employee } from '../../redux/actions/employeeAction'\r\nimport RotateLeftOutlinedIcon from '@material-ui/icons/RotateLeftOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nconst getTeamCollection = () => ([\r\n    { id: '1', title: 'ER' },\r\n    { id: '2', title: 'TR' },\r\n    { id: '3', title: 'MR' },\r\n    { id: '4', title: 'SDE' },\r\n])\r\n\r\n\r\nconst initialFValues = {\r\n    fullName: '',\r\n    emailId: '',\r\n    contactNo: '',\r\n    gender: 'male',\r\n    role: '',\r\n    team: '',\r\n    bankName: '',\r\n    bankAC: '',\r\n    DOB: new Date(),\r\n    location: '',\r\n    hireDate: new Date()\r\n}\r\n\r\nfunction EmployeeForm(props) {\r\n\r\n    // console.log(typeof initialFValues.hireDate)\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('bankName' in fieldValues)\r\n            temp.bankName = fieldValues.bankName ? \"\" : \"This field is required.\"\r\n        if ('bankAC' in fieldValues)\r\n            temp.bankAC = fieldValues.bankAC.length === 12 ? \"\" : \"Bank A/C should be 12 digits number\"\r\n        if ('location' in fieldValues)\r\n            temp.location = fieldValues.location ? \"\" : \"This field is required.\"\r\n        if ('emailId' in fieldValues)\r\n            temp.emailId = (/$^|.+@.+..+/).test(fieldValues.emailId) ? \"\" : \"Email is not valid.\"\r\n        if ('contactNo' in fieldValues)\r\n            temp.contactNo = fieldValues.contactNo.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    console.log(values)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(\"Submit Clicked\")\r\n        if (validate()) {\r\n            props.add_new_employee(values)\r\n            resetForm()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item md={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"emailId\"\r\n                        value={values.emailId}\r\n                        onChange={handleInputChange}\r\n                        error={errors.emailId}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"contactNo\"\r\n                        value={values.contactNo}\r\n                        onChange={handleInputChange}\r\n                        error={errors.contactNo}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"DOB\"\r\n                        label=\"DOB\"\r\n                        value={values.DOB}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Input\r\n                        name=\"location\"\r\n                        label=\"Location\"\r\n                        value={values.location}\r\n                        onChange={handleInputChange}\r\n                        error={errors.location}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"role\"\r\n                        label=\"Role\"\r\n                        value={values.role}\r\n                        onChange={handleInputChange}\r\n                        options={getDepartmentCollection()}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"team\"\r\n                        label=\"Team\"\r\n                        value={values.team}\r\n                        onChange={handleInputChange}\r\n                        options={getTeamCollection()}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Bank Name\"\r\n                        name=\"bankName\"\r\n                        value={values.bankName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.bankName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Bank A/C\"\r\n                        name=\"bankAC\"\r\n                        value={values.bankAC}\r\n                        onChange={handleInputChange}\r\n                        error={errors.bankAC}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div style={{ marginLeft: \"5px\", marginTop: \"5px\" }}>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\"\r\n                            startIcon={<SaveIcon />}\r\n                            disableElevation\r\n                            disableFocusRipple\r\n                            disableRipple\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            startIcon={<RotateLeftOutlinedIcon />}\r\n                            onClick={resetForm}\r\n                            disableElevation\r\n                            disableFocusRipple\r\n                            disableRipple\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default connect(null, { add_new_employee })(EmployeeForm)","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\useForm.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Controls.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Input.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\RadioGroup.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Checkbox.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Select.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\DatePicker.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\controls\\Button.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\actions\\employeeAction.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\AllEmployees.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\employeereducer.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\table\\EmployeeTable.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\utils\\utils.js",[],["232","233"],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\EmpDetails.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Appbar.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\EmployeeForm\\LeaveForm.js",["234"],"import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport Controls from \"../controls/Controls\";\r\nimport { useForm, Form } from '../useForm';\r\nimport { connect } from 'react-redux'\r\nimport { submit_leave_form } from '../../redux/actions/employeeAction'\r\nimport RotateLeftOutlinedIcon from '@material-ui/icons/RotateLeftOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst LeaveItems = () => ([\r\n    { id: 'sick', title: 'Sick' },\r\n    { id: 'casual', title: 'Casual' },\r\n    { id: 'maternity', title: 'Maternity' },\r\n    { id: 'religious', title: 'Religious' }\r\n])\r\n\r\nconst initialFValues = {\r\n    typeOfleave: '',\r\n    reason: '',\r\n    from: new Date(),\r\n    to: new Date(),\r\n}\r\n\r\nfunction LeaveForm(props) {\r\n    // console.log(typeof initialFValues.hireDate)\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('typeOfleave' in fieldValues)\r\n            temp.typeOfleave = fieldValues.typeOfleave ? \"\" : \"This field is required.\"\r\n        if ('reason' in fieldValues)\r\n            temp.reason = fieldValues.reason ? \"\" : \"This field is required.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    console.log(values)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(\"Submit Clicked\")\r\n        if (validate()) {\r\n            props.submit_leave_form({ ...values, userId: props.auth.user.userId })\r\n            resetForm()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item md={6}>\r\n                    <Controls.Select\r\n                        name=\"typeOfleave\"\r\n                        label=\"Type Of Leave\"\r\n                        value={values.typeOfleave}\r\n                        onChange={handleInputChange}\r\n                        options={LeaveItems()}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"reason\"\r\n                        label=\"Reason\"\r\n                        value={values.reason}\r\n                        onChange={handleInputChange}\r\n                        error={errors.reason}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                    <Controls.DatePicker\r\n                        name=\"from\"\r\n                        label=\"From\"\r\n                        value={values.from}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"to\"\r\n                        label=\"To\"\r\n                        value={values.to}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div style={{ marginLeft: \"5px\", marginTop: \"5px\" }}>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\"\r\n                            startIcon={<SaveIcon />}\r\n                            disableElevation\r\n                            disableFocusRipple\r\n                            disableRipple\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            startIcon={<RotateLeftOutlinedIcon />}\r\n                            onClick={resetForm}\r\n                            disableElevation\r\n                            disableFocusRipple\r\n                            disableRipple\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { submit_leave_form })(LeaveForm)",["235","236"],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\LeaveAppln.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\MyLeaveAppln.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\AllLeaveApplns.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\SnackBar.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\actions\\uiAction.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\uireducer.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\ShareEmpCredentials.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\FaQ.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Policies.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Holidays.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Accordion.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\redux\\reducers\\themereducer.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Modules\\Markdown.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Payroll.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\Paper.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Finance.js",["237"],"import { Grid } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport Controls from '../controls/Controls'\r\nimport { Form, useForm } from '../useForm'\r\nimport RotateLeftOutlinedIcon from '@material-ui/icons/RotateLeftOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { submit_finance } from '../../redux/actions/employeeAction'\r\nimport { connect, useSelector } from 'react-redux';\r\nimport Loading from '../../Loading';\r\n\r\nconst initialFValues = {\r\n    from: new Date(),\r\n    to: new Date(),\r\n    total_days: '',\r\n    medical: '',\r\n    pf: '',\r\n    convence: '',\r\n    basic: '', hRent: '', bonus: '', profTax: '', provFund: '', incomeTax: ''\r\n}\r\n\r\nfunction Finance({ ...props }) {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('total_days' in fieldValues)\r\n            temp.total_days = fieldValues.total_days ? \"\" : \"This field is required.\"\r\n        if ('medical' in fieldValues)\r\n            temp.medical = fieldValues.medical ? \"\" : \"This field is required.\"\r\n        if ('pf' in fieldValues)\r\n            temp.pf = fieldValues.pf ? \"\" : \"This field is required.\"\r\n        if ('medical' in fieldValues)\r\n            temp.medical = fieldValues.medical ? \"\" : \"This field is required.\"\r\n        if ('net_salary' in fieldValues)\r\n            temp.net_salary = fieldValues.net_salary ? \"\" : \"This field is required.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    // console.log(values, props.empID)\r\n\r\n    const [NET_SALARY, SET_NET_SALARY] = useState(0);\r\n\r\n    const calculate = () => {\r\n        console.log(values)\r\n        const net = Number(values.basic) + Number(values.hRent) + Number(values.bonus) + Number(values.pf)\r\n            - Number(values.profTax) - Number(values.provFund) - Number(values.incomeTax) - Number(values.convence)\r\n            - Number(values.medical)\r\n        console.log(net);\r\n        SET_NET_SALARY(net)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(\"Submit Clicked\")\r\n        if (validate()) {\r\n            props.submit_finance({ ...values, net_salary: NET_SALARY.toString(), userId: props.userId, empID: props.empID })\r\n            resetForm()\r\n            SET_NET_SALARY(0)\r\n        }\r\n    }\r\n\r\n    const { loading } = useSelector(state => state.loading)\r\n    if (loading) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item md={6}>\r\n                    <Controls.DatePicker\r\n                        name=\"from\"\r\n                        label=\"From\"\r\n                        value={values.from}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"to\"\r\n                        label=\"To\"\r\n                        value={values.to}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"basic\"\r\n                        label=\"Basic\"\r\n                        value={values.basic}\r\n                        onChange={handleInputChange}\r\n                        error={errors.basic}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"hRent\"\r\n                        label=\"House Rent Allowance\"\r\n                        value={values.hRent}\r\n                        onChange={handleInputChange}\r\n                        error={errors.hRent}\r\n                    />\r\n\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"convence\"\r\n                        label=\"Convence\"\r\n                        value={values.convence}\r\n                        onChange={handleInputChange}\r\n                        error={errors.convence}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"pf\"\r\n                        label=\"PF\"\r\n                        value={values.pf}\r\n                        onChange={handleInputChange}\r\n                        error={errors.pf}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"bonus\"\r\n                        label=\"Bonus\"\r\n                        value={values.bonus}\r\n                        onChange={handleInputChange}\r\n                        error={errors.bonus}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"total_days\"\r\n                        label=\"Total days\"\r\n                        value={values.total_days}\r\n                        onChange={handleInputChange}\r\n                        error={errors.total_days}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"medical\"\r\n                        label=\"Medical\"\r\n                        value={values.medical}\r\n                        onChange={handleInputChange}\r\n                        error={errors.medical}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"profTax\"\r\n                        label=\"Professional Tax\"\r\n                        value={values.profTax}\r\n                        onChange={handleInputChange}\r\n                        error={errors.profTax}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"provFund\"\r\n                        label=\"Provident Fund\"\r\n                        value={values.provFund}\r\n                        onChange={handleInputChange}\r\n                        error={errors.provFund}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"incomeTax\"\r\n                        label=\"Income Tax\"\r\n                        value={values.incomeTax}\r\n                        onChange={handleInputChange}\r\n                        error={errors.incomeTax}\r\n                    />\r\n                    <Controls.Input\r\n                        multiple={true}\r\n                        name=\"net_salary\"\r\n                        label=\"Net Salary\"\r\n                        value={NET_SALARY}\r\n                        onChange={handleInputChange}\r\n                        disabled={true}\r\n                    />\r\n\r\n                    <div style={{ marginLeft: \"5px\", marginTop: \"5px\" }}>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\"\r\n                            startIcon={<SaveIcon />}\r\n                            disableElevation\r\n                            disableFocusRipple\r\n                            disableRipple\r\n                            variant=\"outlined\"\r\n                            disabled={NET_SALARY === 0 || !props.empID}\r\n                        />\r\n                        <Controls.Button\r\n                            type=\"button\"\r\n                            text=\"Calculate\"\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={calculate}\r\n                            disableElevation\r\n                            disableFocusRipple\r\n                            disableRipple\r\n                            variant=\"outlined\"\r\n                        // disabled={!props.empID}\r\n                        />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            startIcon={<RotateLeftOutlinedIcon />}\r\n                            onClick={() => { resetForm(); SET_NET_SALARY(0) }}\r\n                            disableElevation\r\n                            disableFocusRipple\r\n                            disableRipple\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default connect(null, { submit_finance })(Finance)\r\n","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\table\\FinanceTable.js",["238"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport moment from 'moment'\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\nexport default function BasicTable({ employee }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const createAndDownloadPdf = (row, employee) => {\r\n        console.log(row.from)\r\n        console.log(row.to)\r\n        const data = {\r\n            ...row,\r\n            contactNo: employee.contactNo,\r\n            fullName: employee.fullName,\r\n            bankName: employee.bankName,\r\n            bankAC: employee.bankAC,\r\n            DOB: employee.DOB,\r\n            location: employee.location,\r\n            role: employee.role,\r\n            team: employee.team,\r\n            empID: employee.empID,\r\n            gender: employee.gender,\r\n        }\r\n        // dispatch({ type: 'LOADING', payload: true })\r\n        axios.post('/create-pdf', data)\r\n            .then(() => axios.get('/fetch-pdf', { responseType: 'blob' }))\r\n            .then((res) => {\r\n                const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n                // dispatch({ type: 'LOADING', payload: false })\r\n                saveAs(pdfBlob, 'newPdf.pdf');\r\n            })\r\n            .catch((err) => console.log('Error during downloading pdf ', err))\r\n    }\r\n    return (\r\n        <>\r\n            {employee?.payroll?.length !== 0 ? (\r\n                <>\r\n                    <h1>Generate Slip</h1>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{ backgroundColor: theme.palette.background.paper }}>From</TableCell>\r\n                                    <TableCell style={{ backgroundColor: theme.palette.background.paper }}>To</TableCell>\r\n                                    <TableCell style={{ backgroundColor: theme.palette.background.paper }}>Generate Slip</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {employee?.payroll?.map((row, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell style={{ backgroundColor: theme.palette.background.paper }} component=\"th\" scope=\"row\">\r\n                                            {moment(row.from).format('LL')}\r\n                                        </TableCell>\r\n                                        <TableCell style={{ backgroundColor: theme.palette.background.paper }} component=\"th\" scope=\"row\">\r\n                                            {moment(row.to).format('LL')}\r\n                                        </TableCell>\r\n                                        <TableCell style={{ backgroundColor: theme.palette.background.paper }} component=\"th\" scope=\"row\">\r\n                                            <Button onClick={() => createAndDownloadPdf(row, employee)} style={{ textTransform: 'none' }} startIcon={<GetAppIcon />} size=\"small\" variant=\"contained\" color=\"primary\">\r\n                                                Download\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            ) : null}\r\n        </>\r\n    );\r\n}","A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\MySlips.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\HolidayaData.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\faqData.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\Loading.js",[],"A:\\Hollow_Me\\StackHack 2.0\\client\\src\\components\\NavbarComponents\\Profile.js",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":74,"column":9,"nodeType":"245","messageId":"246","endLine":74,"endColumn":18},{"ruleId":"239","replacedBy":"247"},{"ruleId":"241","replacedBy":"248"},{"ruleId":"243","severity":1,"message":"244","line":44,"column":9,"nodeType":"245","messageId":"246","endLine":44,"endColumn":18},{"ruleId":"239","replacedBy":"249"},{"ruleId":"241","replacedBy":"250"},{"ruleId":"243","severity":1,"message":"244","line":46,"column":9,"nodeType":"245","messageId":"246","endLine":46,"endColumn":18},{"ruleId":"243","severity":1,"message":"251","line":27,"column":11,"nodeType":"245","messageId":"246","endLine":27,"endColumn":19},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'setValues' is assigned a value but never used.","Identifier","unusedVar",["252"],["253"],["252"],["253"],"'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]